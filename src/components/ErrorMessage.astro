---
export interface Props {
  message: string
  type?: 'error' | 'warning' | 'info'
}

const { message, type = 'error' } = Astro.props
---

<div class={`error-message ${type} content-appear`} role="alert">
  <span class="error-icon" aria-hidden="true">
    {type === 'error' && '⚠️'}
    {type === 'warning' && '⚡'}
    {type === 'info' && 'ℹ️'}
  </span>
  <span class="error-text visual-secondary">{message}</span>
</div>

<script>
  import { clearError } from '../stores/groupStore';

  document.addEventListener('DOMContentLoaded', () => {
    const errorMessages = document.querySelectorAll('.error-message');
    
    errorMessages.forEach(errorMessage => {
      const closeBtn = errorMessage.querySelector('.close-btn');
      
      if (closeBtn) {
        closeBtn.addEventListener('click', () => {
          clearError();
          errorMessage.remove();
        });
      }
      
      // 5秒後に自動的にエラーメッセージを非表示にする
      setTimeout(() => {
        errorMessage.classList.add('fade-out');
        setTimeout(() => {
          clearError();
          errorMessage.remove();
        }, 300);
      }, 5000);
    });
  });
</script>

<style>
  .error-message {
    display: flex;
    align-items: center;
    gap: var(--spacing-3);
    padding: var(--spacing-3) var(--spacing-4);
    margin: var(--spacing-4) 0;
    border-radius: var(--radius-md);
    font-size: var(--font-size-sm);
    border: 1px solid;
    transition: all var(--duration-fast) var(--easing-in-out);
  }

  .error-message.error {
    background: rgba(239, 68, 68, 0.05);
    border-color: rgba(239, 68, 68, 0.2);
    color: var(--color-error);
  }

  .error-message.warning {
    background: rgba(245, 158, 11, 0.05);
    border-color: rgba(245, 158, 11, 0.2);
    color: var(--color-warning);
  }

  .error-message.info {
    background: rgba(59, 130, 246, 0.05);
    border-color: rgba(59, 130, 246, 0.2);
    color: var(--color-info);
  }

  .error-icon {
    font-size: var(--font-size-lg);
    flex-shrink: 0;
  }

  .error-text {
    flex: 1;
    line-height: var(--line-height-relaxed);
  }

  /* Dark mode */
  @media (prefers-color-scheme: dark) {
    .error-message.error {
      background: rgba(239, 68, 68, 0.1);
      border-color: rgba(239, 68, 68, 0.3);
    }

    .error-message.warning {
      background: rgba(245, 158, 11, 0.1);
      border-color: rgba(245, 158, 11, 0.3);
    }

    .error-message.info {
      background: rgba(59, 130, 246, 0.1);
      border-color: rgba(59, 130, 246, 0.3);
    }
  }
</style> 