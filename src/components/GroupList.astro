---
import type { GroupWithMembers } from '../stores/groupStore'

export interface Props {
  groups: GroupWithMembers[]
}

const { groups } = Astro.props

// バッジカラーの定義
const badgeColors = [
  'badge-primary',
  'badge-info',
  'badge-success',
  'badge-warning',
  'badge-secondary',
]
---

<div class="groups-container">
  {groups.length === 0 ? (
    <div class="empty-state">
      <p class="visual-secondary">まだグループがありません</p>
      <p class="visual-tertiary">新しいグループを作成してメンバーを管理しましょう</p>
    </div>
  ) : (
    <div class="groups-grid">
      {groups.map((group, index) => (
        <div class={`group-card minimal-card interactive card-stagger stagger-${Math.min(index + 1, 6)}`} data-group-id={group.id}>
          <div class="group-header">
            <h3 class="group-name visual-primary">{group.name}</h3>
            <span class={`badge badge-sm ${badgeColors[index % badgeColors.length]}`}>
              {group.members.length}人
            </span>
          </div>
          
          <div class="members-list">
            {group.members.map((member) => (
              <div class="member-item">
                <span class="member-name visual-secondary">{member.name}</span>
                <span class="member-email visual-tertiary">{member.email}</span>
              </div>
            ))}
          </div>
          
          <div class="group-actions">
            <button 
              class="btn btn-subtle btn-sm"
              data-action="view"
              data-group-id={group.id}
              title="週間スケジュールを表示"
            >
              <span class="action-icon">📅</span>
              スケジュール
            </button>
            <button 
              class="btn btn-subtle btn-sm"
              data-action="edit"
              data-group-id={group.id}
              title="グループを編集"
            >
              <span class="action-icon">✏️</span>
              編集
            </button>
            <button 
              class="btn btn-subtle btn-sm"
              data-action="delete"
              data-group-id={group.id}
              title="グループを削除"
            >
              <span class="action-icon">🗑️</span>
              削除
            </button>
          </div>
        </div>
      ))}
    </div>
  )}
</div>

<script>
  // イベント委譲を使用してボタンのイベントハンドリング
  document.addEventListener('click', (e) => {
    const target = e.target as HTMLElement;
    const button = target.closest('button[data-action]');
    
    if (button) {
      const action = button.getAttribute('data-action');
      const groupId = button.getAttribute('data-group-id');
      
      if (action === 'view' && groupId) {
        // スケジュール表示
        window.location.href = `/groups/${groupId}/weekly-schedule`;
      } else if (action === 'edit' && groupId) {
        // 編集イベント
        window.dispatchEvent(new CustomEvent('group-edit', { 
          detail: { groupId } 
        }));
      } else if (action === 'delete' && groupId) {
        // 削除イベント
        window.dispatchEvent(new CustomEvent('group-delete', { 
          detail: { groupId } 
        }));
      }
    }
  });
</script>

<style>
  .groups-container {
    width: 100%;
  }

  /* Empty state - minimal design */
  .empty-state {
    text-align: center;
    padding: var(--spacing-12) var(--spacing-6);
  }

  .empty-state p {
    margin: var(--spacing-2) 0;
  }

  /* Groups grid - clean layout */
  .groups-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: var(--spacing-6);
  }

  /* Group card - minimal style */
  .group-card {
    padding: var(--spacing-6);
    border-radius: var(--radius-lg);
    display: flex;
    flex-direction: column;
    gap: var(--spacing-4);
  }

  .group-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: var(--spacing-3);
  }

  .group-name {
    margin: 0;
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
  }

  /* Members list - clean layout */
  .members-list {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-3);
    min-height: 120px;
    max-height: 200px;
    overflow-y: auto;
    padding-right: var(--spacing-2);
  }

  .members-list::-webkit-scrollbar {
    width: 4px;
  }

  .members-list::-webkit-scrollbar-track {
    background: transparent;
  }

  .members-list::-webkit-scrollbar-thumb {
    background: var(--color-border);
    border-radius: var(--radius-full);
  }

  .member-item {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-1);
    padding: var(--spacing-2) 0;
    border-bottom: 1px solid var(--color-border);
  }

  .member-item:last-child {
    border-bottom: none;
  }

  /* Group actions - subtle buttons */
  .group-actions {
    display: flex;
    gap: var(--spacing-2);
    margin-top: auto;
    padding-top: var(--spacing-4);
    border-top: 1px solid var(--color-border);
  }

  .btn-sm {
    padding: var(--spacing-1) var(--spacing-3);
    font-size: var(--font-size-sm);
  }

  .action-icon {
    margin-right: var(--spacing-1);
  }

  /* Responsive */
  @media (max-width: 768px) {
    .groups-grid {
      grid-template-columns: 1fr;
      gap: var(--spacing-4);
    }

    .group-card {
      padding: var(--spacing-4);
    }

    .group-actions {
      flex-wrap: wrap;
    }

    .btn-sm {
      flex: 1;
      min-width: 0;
    }
  }
</style> 