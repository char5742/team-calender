---
import type { GroupWithMembers } from '../stores/groupStore'

export interface Props {
  groups: GroupWithMembers[]
  selectedGroupId?: string | null
  onGroupClick?: (groupId: string) => void
}

const { groups, selectedGroupId } = Astro.props

// „Ç∞„É´„Éº„Éó„ÅÆ„Ç¢„Ç§„Ç≥„É≥„Çí„É©„É≥„ÉÄ„É†„Å´ÈÅ∏Êäû„Åô„Çã„Åü„ÇÅ„ÅÆÁµµÊñáÂ≠ó„Çª„ÉÉ„Éà
const groupIcons = ['üë•', 'üéØ', 'üöÄ', 'üí°', 'üåü', 'üé®', 'üèÜ', 'üåà', 'üíº', 'üî•']
const getGroupIcon = (groupId: string) => {
  // „Ç∞„É´„Éº„ÉóIDÂÖ®‰Ωì„Çí‰ΩøÁî®„Åó„Å¶„Çà„ÇäÂ§öÊßò„Å™„Ç¢„Ç§„Ç≥„É≥„ÇíÈÅ∏Êäû
  let hash = 0
  for (let i = 0; i < groupId.length; i++) {
    hash = (hash << 5) - hash + groupId.charCodeAt(i)
    hash &= hash // Convert to 32bit integer
  }
  const index = Math.abs(hash) % groupIcons.length
  return groupIcons[index]
}
---

<div class="group-list">
  <h2>„Ç∞„É´„Éº„Éó‰∏ÄË¶ß</h2>
  {groups.length === 0 ? (
    <div class="empty-state">
      <svg class="empty-icon" width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
        <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path>
        <circle cx="9" cy="7" r="4"></circle>
        <path d="M23 21v-2a4 4 0 0 0-3-3.87"></path>
        <path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
      </svg>
      <p class="empty-message">„Åæ„Å†„Ç∞„É´„Éº„Éó„Åå„ÅÇ„Çä„Åæ„Åõ„Çì</p>
      <p class="empty-description">Êñ∞„Åó„ÅÑ„Ç∞„É´„Éº„Éó„Çí‰ΩúÊàê„Åó„Å¶„ÄÅ„ÉÅ„Éº„É†„É°„É≥„Éê„Éº„ÇíÁÆ°ÁêÜ„Åó„Åæ„Åó„Çá„ÅÜ</p>
    </div>
  ) : (
    <ul class="groups">
      {groups.map((group) => (
        <li 
          class={`group-item ${selectedGroupId === group.id ? 'selected' : ''}`}
          data-group-id={group.id}
        >
          <button
            class="group-button"
            onclick={`window.dispatchEvent(new CustomEvent('group-click', { detail: { groupId: '${group.id}' } }))`}
          >
            <div class="group-content">
              <div class="group-icon">{getGroupIcon(group.id)}</div>
              <div class="group-info">
                <div class="group-header">
                  <h3 class="group-name">{group.name}</h3>
                  <span class="member-count">
                    <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                      <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path>
                      <circle cx="9" cy="7" r="4"></circle>
                      <path d="M23 21v-2a4 4 0 0 0-3-3.87"></path>
                      <path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
                    </svg>
                    {group.members.length}
                  </span>
                </div>
                <div class="member-list">
                  {group.members.slice(0, 3).map((member) => (
                    <span class="member-name">{member.name}</span>
                  ))}
                  {group.members.length > 3 && (
                    <span class="more-members">+{group.members.length - 3}</span>
                  )}
                </div>
              </div>
            </div>
          </button>
          <div class="group-actions">
            <a 
              href={`/groups/${group.id}/weekly-schedule`}
              class="action-btn schedule-btn"
              title="„Çπ„Ç±„Ç∏„É•„Éº„É´Ë°®Á§∫"
            >
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                <line x1="16" y1="2" x2="16" y2="6"></line>
                <line x1="8" y1="2" x2="8" y2="6"></line>
                <line x1="3" y1="10" x2="21" y2="10"></line>
              </svg>
            </a>
            <button 
              class="action-btn edit-btn" 
              data-group-id={group.id} 
              title="Á∑®ÈõÜ"
            >
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
              </svg>
            </button>
            <button 
              class="action-btn delete-btn" 
              data-group-id={group.id} 
              title="ÂâäÈô§"
            >
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <polyline points="3 6 5 6 21 6"></polyline>
                <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>
              </svg>
            </button>
          </div>
        </li>
      ))}
    </ul>
  )}
</div>

<script>
  // „Ç§„Éô„É≥„ÉàÂßîË≠≤„Çí‰ΩøÁî®„Åó„Å¶Á∑®ÈõÜ„ÉªÂâäÈô§„Éú„Çø„É≥„ÅÆ„Ç§„Éô„É≥„Éà„Éè„É≥„Éâ„É™„É≥„Ç∞
  document.addEventListener('click', (e) => {
    const target = e.target as HTMLElement;
    
    // Á∑®ÈõÜ„Éú„Çø„É≥„ÅÆ„ÇØ„É™„ÉÉ„ÇØÂá¶ÁêÜ
    const editBtn = target.closest('.edit-btn');
    if (editBtn) {
      e.stopPropagation();
      const groupId = editBtn.getAttribute('data-group-id');
      console.log('Edit button clicked, groupId:', groupId);
      if (groupId) {
        window.dispatchEvent(new CustomEvent('group-edit', { 
          detail: { groupId } 
        }));
      }
    }
    
    // ÂâäÈô§„Éú„Çø„É≥„ÅÆ„ÇØ„É™„ÉÉ„ÇØÂá¶ÁêÜ
    const deleteBtn = target.closest('.delete-btn');
    if (deleteBtn) {
      e.stopPropagation();
      const groupId = deleteBtn.getAttribute('data-group-id');
      console.log('Delete button clicked, groupId:', groupId);
      if (groupId) {
        window.dispatchEvent(new CustomEvent('group-delete', { 
          detail: { groupId } 
        }));
      }
    }
  });
</script>

<style>
  .group-list {
    padding: var(--spacing-6);
    background-color: var(--color-background-secondary);
    border-radius: var(--radius-xl);
    max-width: 420px;
    box-shadow: var(--shadow-sm);
  }

  h2 {
    margin: 0 0 var(--spacing-5) 0;
    font-size: var(--font-size-2xl);
    color: var(--color-text-primary);
    font-weight: var(--font-weight-bold);
    letter-spacing: var(--letter-spacing-tight);
  }

  .empty-state {
    text-align: center;
    padding: var(--spacing-12) var(--spacing-8);
    background: var(--color-surface);
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-sm);
  }

  .empty-icon {
    color: var(--color-gray-300);
    margin-bottom: var(--spacing-4);
    opacity: 0.8;
  }

  .empty-message {
    color: var(--color-text-secondary);
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
    margin: 0 0 var(--spacing-2) 0;
  }

  .empty-description {
    color: var(--color-text-tertiary);
    font-size: var(--font-size-sm);
    margin: 0;
    line-height: var(--line-height-relaxed);
  }

  .groups {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: var(--spacing-3);
  }

  .group-item {
    background-color: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    transition: all var(--duration-normal) var(--easing-spring);
    position: relative;
    box-shadow: var(--shadow-md);
    overflow: hidden;
    backdrop-filter: blur(var(--blur-sm));
  }

  .group-item:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
    border-color: var(--color-primary-300);
  }

  .group-item.selected {
    border-color: var(--color-primary-500);
    background: linear-gradient(135deg, var(--color-primary-50) 0%, var(--color-surface) 100%);
    box-shadow: 0 4px 12px rgba(90, 122, 255, 0.15);
  }

  .group-button {
    width: 100%;
    padding: var(--spacing-4);
    padding-right: calc(var(--spacing-24) + var(--spacing-4));
    background: none;
    border: none;
    text-align: left;
    cursor: pointer;
    font-family: inherit;
    position: relative;
    z-index: 1;
  }

  .group-content {
    display: flex;
    align-items: flex-start;
    gap: var(--spacing-4);
  }

  .group-icon {
    width: 48px;
    height: 48px;
    background: var(--color-background-tertiary);
    border-radius: var(--radius-md);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 24px;
    flex-shrink: 0;
    box-shadow: var(--shadow-sm);
    transition: all var(--duration-normal) var(--easing-in-out);
  }

  .group-item:hover .group-icon {
    transform: scale(1.05);
    box-shadow: var(--shadow-md);
  }

  .group-item.selected .group-icon {
    background: linear-gradient(135deg, var(--color-primary-100) 0%, var(--color-primary-200) 100%);
  }

  .group-info {
    flex: 1;
    min-width: 0;
  }

  .group-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--spacing-2);
    gap: var(--spacing-3);
  }

  .group-name {
    margin: 0;
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
    color: var(--color-text-primary);
    letter-spacing: var(--letter-spacing-tight);
    line-height: var(--line-height-tight);
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .member-count {
    font-size: var(--font-size-sm);
    color: var(--color-text-secondary);
    background: var(--color-background-tertiary);
    padding: var(--spacing-1) var(--spacing-2);
    border-radius: var(--radius-full);
    display: flex;
    align-items: center;
    gap: var(--spacing-1);
    font-weight: var(--font-weight-medium);
    white-space: nowrap;
    box-shadow: var(--shadow-xs);
  }

  .member-count svg {
    opacity: 0.7;
  }

  .member-list {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-2);
    font-size: var(--font-size-sm);
    color: var(--color-text-tertiary);
  }

  .member-name {
    background: var(--color-background-secondary);
    padding: var(--spacing-1) var(--spacing-3);
    border-radius: var(--radius-full);
    font-weight: var(--font-weight-medium);
    letter-spacing: var(--letter-spacing-tight);
    box-shadow: var(--shadow-xs);
    transition: all var(--duration-fast) var(--easing-in-out);
  }

  .group-item:hover .member-name {
    background: var(--color-background-tertiary);
  }

  .more-members {
    color: var(--color-primary-500);
    font-weight: var(--font-weight-semibold);
    background: var(--color-primary-50);
    padding: var(--spacing-1) var(--spacing-3);
    border-radius: var(--radius-full);
    box-shadow: var(--shadow-xs);
  }

  .group-actions {
    position: absolute;
    top: var(--spacing-4);
    right: var(--spacing-4);
    display: flex;
    gap: var(--spacing-2);
    z-index: 10;
    opacity: 0;
    transform: translateX(8px);
    transition: all var(--duration-normal) var(--easing-in-out);
  }

  .group-item:hover .group-actions {
    opacity: 1;
    transform: translateX(0);
  }

  .action-btn {
    width: 36px;
    height: 36px;
    padding: 0;
    border: none;
    background: var(--color-glass-bg);
    backdrop-filter: blur(var(--blur-md));
    color: var(--color-text-tertiary);
    cursor: pointer;
    border-radius: var(--radius-md);
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all var(--duration-fast) var(--easing-spring);
    position: relative;
    z-index: 10;
    box-shadow: var(--shadow-sm);
  }

  .action-btn:hover {
    transform: scale(1.1);
    box-shadow: var(--shadow-md);
  }

  .edit-btn:hover {
    color: var(--color-primary-500);
    background: var(--color-primary-50);
  }

  .schedule-btn:hover {
    color: var(--color-success);
    background: rgba(16, 185, 129, 0.1);
  }

  .delete-btn:hover {
    color: var(--color-error);
    background: rgba(239, 68, 68, 0.1);
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .group-list {
      max-width: 100%;
      padding: var(--spacing-4);
    }

    .group-actions {
      opacity: 1;
      transform: translateX(0);
    }

    .action-btn {
      width: 32px;
      height: 32px;
    }
  }
</style> 