---
import type { TeamMember, WeeklySchedule } from '../lib/schema.ts'
import { formatDate } from '../utils/dateUtils.ts'
import EventPopover from './EventPopover.astro'
import CalendarHeader from './weeklyCalendar/CalendarHeader.astro'
import MemberScheduleRow from './weeklyCalendar/MemberScheduleRow.astro'

export interface Props {
  weeklySchedule: WeeklySchedule
  members: TeamMember[]
}

const { weeklySchedule, members } = Astro.props

// 週の開始日を取得
const weekStartDate = new Date(weeklySchedule.weekStart)

// 曜日のラベル
const dayLabels = ['月', '火', '水', '木', '金', '土', '日']

// 日付ヘッダーを生成
const dateHeaders = Array.from({ length: 7 }, (_, i) => {
  const date = new Date(weekStartDate)
  date.setDate(date.getDate() + i)
  return {
    dayLabel: dayLabels[i],
    dateStr: formatDate(date, 'M/D'),
    date,
  }
})

// マッピング: イベントラベル → 表示色 (CSS 変数 / HEX)
// ※ カラーは CSS クラス側で管理するため、ここではマッピング不要
---

<div class="weekly-calendar-wrapper">
  <div class="weekly-calendar minimal-card content-appear" id="weekly-calendar">
    <CalendarHeader dateHeaders={dateHeaders} />

    <div class="calendar-scroll-container">
      <div class="calendar-grid" role="grid">
        {members.map((member, memberIndex) => {
          const memberEvents = weeklySchedule.eventsByMember[member.id] || []
          return (
            <MemberScheduleRow
              member={member}
              memberEvents={memberEvents}
              weekStartDate={weekStartDate}
              memberIndex={memberIndex}
            />
          )
        })}
      </div>
    </div>
  </div>
</div>

<!-- Event Popover -->
<EventPopover />

<script>
  // イベントクリックハンドラー
  document.addEventListener('click', (e) => {
    const target = e.target as HTMLElement;
    if (!target) return;

    const eventBlock = target.closest('.event-block');
    if (eventBlock) {
      e.preventDefault();
      const eventId = eventBlock.getAttribute('data-event-id');
      // イベントデータを取得して表示（実際の実装では適切にイベントデータを渡す）
      window.dispatchEvent(new CustomEvent('event-popover-open', { detail: { eventId } }));
    }
  });

  // キーボードナビゲーション対応
  document.addEventListener('keydown', (e) => {
    const target = e.target as HTMLElement;
    if (target.classList.contains('event-block') && (e.key === 'Enter' || e.key === ' ')) {
      e.preventDefault();
      target.click();
    }
  });

  // ポップオーバーを閉じる
  window.addEventListener('event-popover-close', () => {
    const popover = document.querySelector('.popover-overlay');
    if (popover) {
      popover.classList.remove('open');
    }
  });
</script>

<style>
  .weekly-calendar-wrapper {
    position: relative;
    width: 100%;
    max-width: 1400px; /* 最大幅を設定 */
    margin: 0 auto; /* 中央寄せ */
    padding: 0 var(--spacing-6); /* 左右に余白を追加 */
    overflow: hidden; /* コンテンツがはみ出さないように制限 */
  }

  .weekly-calendar {
    background-color: var(--color-surface);
    border-radius: var(--radius-lg);
    overflow: hidden;
    position: relative;
  }

  .calendar-scroll-container {
    overflow-x: hidden; /* スクロールを無効化 */
    overflow-y: hidden;
    max-width: 100%;
  }

  .calendar-grid {
    min-height: 400px;
    width: 100%; /* min-widthからwidthに変更 */
  }

  .member-row {
    display: grid;
    grid-template-columns: 160px 1fr; /* 140px → 160px に拡大 */
    border-bottom: 1px solid var(--color-border);
    min-height: 120px;
  }

  .member-row:last-child {
    border-bottom: none;
  }

  .member-name {
    padding: var(--spacing-3);
    background: var(--color-background-secondary);
    border-right: 1px solid var(--color-border);
    display: flex;
    align-items: center;
    gap: var(--spacing-2);
    position: sticky;
    left: 0;
    z-index: 5;
  }

  .member-name-text {
    flex: 1;
    font-size: var(--font-size-sm);
  }

  .member-schedule {
    display: grid;
    grid-template-columns: repeat(7, 1fr); /* minmaxを削除してスクロールを防ぐ */
    width: 100%;
  }

  .day-cell {
    border-right: 1px solid var(--color-border);
    padding: var(--spacing-4);
  }

  .day-cell:last-child {
    border-right: none;
  }

  .event-block {
    --event-border-color: var(--color-primary); /* デフォルト */
    padding: var(--spacing-1) var(--spacing-3); /* 上下パディングを削減 */
    border-radius: var(--radius-sm);
    cursor: pointer;
    transition: all var(--duration-fast) var(--easing-in-out);
    color: var(--color-text-primary); /* テキスト色を濃い色に */
    font-size: var(--font-size-xs);
    background-color: var(--color-background-secondary); /* 薄い背景色 */
    border-left: 4px solid var(--event-border-color); /* 左側に太いボーダー */
    position: relative;
  }

  .event-block:hover {
    transform: translateX(2px); /* 右へ少し移動 */
    box-shadow: var(--shadow-sm);
    background-color: var(--color-surface); /* ホバー時により明るく */
  }

  .event-time {
    font-size: 0.625rem;
    opacity: 0.7; /* より読みやすく */
    margin-bottom: 2px; /* 間隔を最小限に */
    color: var(--color-text-secondary);
  }

  .event-title {
    font-weight: var(--font-weight-medium);
    line-height: 1.2; /* 行高を少し狭く */
    margin-bottom: 2px; /* 間隔を最小限に */
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    color: var(--color-text-primary);
  }

  .event-category {
    font-size: 0.625rem;
    opacity: 0.6;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    color: var(--color-text-tertiary);
  }

  /* イベントタイプ別のスタイル */
  .event-block[data-type="meeting"] {
    background: var(--color-background-secondary); /* 背景色削除 */
  }

  .event-block[data-type="work"] {
    background: var(--color-background-secondary); /* 背景色削除 */
  }

  /* 終日予定のスタイル */
  .all-day-event {
    opacity: 0.7;
    background: var(--color-gray-50);
    border-left: none;
    border-top: 3px solid var(--event-border-color);
    padding-top: var(--spacing-2);
  }

  .all-day-event:hover {
    opacity: 0.9;
    background: var(--color-gray-100);
  }

  .all-day-label {
    display: flex;
    align-items: center;
    gap: 4px;
    font-size: 0.625rem;
    color: var(--color-text-tertiary);
  }

  .all-day-icon {
    display: none; /* アイコンは非表示に */
  }

  /* ダークモード対応 */
  @media (prefers-color-scheme: dark) {
    .all-day-event {
      background: rgba(255, 255, 255, 0.05);
    }

    .all-day-event:hover {
      opacity: 1;
      background: rgba(255, 255, 255, 0.08);
    }
  }

  /* ラベル別カラー変数設定 */
  .event-block.label-meeting         { --event-border-color: #a5d8ff; } /* Pastel blue */
  .event-block.label-outofoffice     { --event-border-color: #b9f6ca; } /* Pastel green */
  .event-block.label-vacation        { --event-border-color: #ffadad; } /* Pastel pink */
  .event-block.label-documentwork    { --event-border-color: #d8b4fe; } /* Pastel lavender */
  .event-block.label-other           { --event-border-color: #ffd88d; } /* Pastel orange */
</style> 