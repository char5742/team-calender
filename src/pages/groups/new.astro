---
import { getLiveCollection } from 'astro:content'
import type { LiveDataEntry } from 'astro'
import GroupCreateForm from '../../components/GroupCreateForm.astro'
import Header from '../../components/Header.astro'
import type { Group, TeamMember } from '../../lib/schema'
import { groupsStore, teamMembersStore } from '../../stores/groupStore'

// Live コレクションからデータを取得しストアへ設定
const groupsEntries = await getLiveCollection('groups')
const membersEntries = await getLiveCollection('teamMembers')

const groupsArr: LiveDataEntry<Group>[] = Array.isArray(groupsEntries)
  ? (groupsEntries as LiveDataEntry<Group>[])
  : (groupsEntries?.entries ?? [])
const membersArr: LiveDataEntry<TeamMember>[] = Array.isArray(membersEntries)
  ? (membersEntries as LiveDataEntry<TeamMember>[])
  : (membersEntries?.entries ?? [])

const existingGroupsData: Group[] = groupsArr.map((entry) => entry.data)
const membersData: TeamMember[] = membersArr.map((entry) => entry.data)

if (groupsStore.get().length === 0) {
  groupsStore.set(existingGroupsData)
}
if (teamMembersStore.get().length === 0) {
  teamMembersStore.set(membersData)
}

const members = membersData
const existingGroups = existingGroupsData
---

<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>新しいグループを作成 - Team Calendar</title>
    <link rel="stylesheet" href="/src/styles/design-system.css" />
    <link rel="stylesheet" href="/src/styles/animations.css" />
  </head>
  <body>
    <Header />
    
    <main>
      <div class="container">
        <GroupCreateForm members={members} existingGroups={existingGroups} />
      </div>
    </main>
  </body>
</html>

<style>
  body {
    margin: 0;
    padding: 0;
    min-height: 100vh;
    background-color: var(--color-background);
  }

  main {
    min-height: calc(100vh - 48px);
    background-color: var(--color-background-secondary);
    padding: 2rem 1rem;
  }

  .container {
    max-width: 800px;
    margin: 0 auto;
  }
</style>

<script lang="ts" define:vars={{ members, existingGroups }}>
  import { teamMembersStore, groupsStore } from '../../stores/groupStore'
  
  // 初期データをクライアントストアへ設定
  if (groupsStore.get().length === 0) {
    groupsStore.set(existingGroups)
  }
  if (teamMembersStore.get().length === 0) {
    teamMembersStore.set(members)
  }

  // グループ作成成功時の処理をカスタマイズ
  document.addEventListener('groupCreated', (event) => {
    const { group } = (event).detail || {}
    
    // トースト通知を表示（実装によって異なる）
    console.log('グループが作成されました:', group)
    
    // 他の開発者の実装に合わせて、グループ一覧ページやダッシュボードへ遷移
    // event.preventDefault(); // デフォルトの遷移を防ぐ場合
    // window.location.href = `/groups/${group.id}`;
  })
</script> 