---
import { getLiveCollection } from 'astro:content'
import type { LiveDataEntry } from 'astro'
import GroupCreateForm from '../../components/GroupCreateForm.astro'
import Header from '../../components/Header.astro'
import type { Group, TeamMember } from '../../lib/schema'

// Live コレクションからデータを取得
const groupsEntries = await getLiveCollection('groups')
const membersEntries = await getLiveCollection('teamMembers')

const groupsArr: LiveDataEntry<Group>[] = Array.isArray(groupsEntries)
  ? (groupsEntries as LiveDataEntry<Group>[])
  : (groupsEntries?.entries ?? [])
const membersArr: LiveDataEntry<TeamMember>[] = Array.isArray(membersEntries)
  ? (membersEntries as LiveDataEntry<TeamMember>[])
  : (membersEntries?.entries ?? [])

const existingGroupsData: Group[] = groupsArr.map((entry) => entry.data)
const membersData: TeamMember[] = membersArr.map((entry) => entry.data)

const members = membersData
const existingGroups = existingGroupsData
---

<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>新規グループ作成 - チームカレンダー</title>
    <link rel="stylesheet" href="/src/styles/design-system.css" />
    <link rel="stylesheet" href="/src/styles/animations.css" />
  </head>
  <body>
    <Header />
    <main class="main-content page-transition">
      <GroupCreateForm 
        members={members}
        existingGroups={existingGroups}
      />
    </main>
  </body>
</html>

<style>
  /* デザインシステムのインポート */
  @import '/src/styles/design-system.css';
  @import '/src/styles/animations.css';

  body {
    margin: 0;
    font-family: var(--font-family-sans);
    background-color: var(--color-background);
    color: var(--color-text-primary);
    min-height: 100vh;
  }

  .main-content {
    max-width: 600px;
    margin: 0 auto;
    padding: var(--spacing-8);
  }
</style>

<script lang="ts" define:vars={{ members, existingGroups }}>
  // グループ作成成功時の処理をカスタマイズ
  document.addEventListener('groupCreated', (event) => {
    const { group } = (event).detail || {}
    
    // トースト通知を表示（実装によって異なる）
    console.log('グループが作成されました:', group)
    
    // 作成したグループのカレンダー画面へ遷移
    if (group && group.id) {
      window.location.href = `/groups/${group.id}/weekly-schedule`
    }
  })
</script> 