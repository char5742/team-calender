---
import GroupCreateForm from '../../components/GroupCreateForm.astro'
import Header from '../../components/Header.astro'
import { loadMockData } from '../../lib/mockData'
import { groupsStore, teamMembersStore } from '../../stores/groupStore'

// 開発時とテスト時のモックデータ読み込み
if (import.meta.env.DEV || import.meta.env.MODE === 'production') {
  loadMockData()
}

const members = teamMembersStore.get()
const existingGroups = groupsStore.get()
---

<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>新しいグループを作成 - Team Calendar</title>
    <link rel="stylesheet" href="/src/styles/design-system.css" />
    <link rel="stylesheet" href="/src/styles/animations.css" />
  </head>
  <body>
    <Header />
    
    <main>
      <div class="container">
        <GroupCreateForm members={members} existingGroups={existingGroups} />
      </div>
    </main>
  </body>
</html>

<style>
  body {
    margin: 0;
    padding: 0;
    min-height: 100vh;
    background-color: var(--color-background);
  }

  main {
    min-height: calc(100vh - 48px);
    background-color: var(--color-background-secondary);
    padding: 2rem 1rem;
  }

  .container {
    max-width: 800px;
    margin: 0 auto;
  }
</style>

<script>
  import { loadMockData } from '../../lib/mockData'
  import { teamMembersStore, groupsStore } from '../../stores/groupStore'
  
  // クライアントサイドでもモックデータを初期化
  if (teamMembersStore.get().length === 0 || groupsStore.get().length === 0) {
    loadMockData()
  }

  // グループ作成成功時の処理をカスタマイズ
  document.addEventListener('groupCreated', (event) => {
    const customEvent = event as CustomEvent
    const { group } = customEvent.detail
    
    // トースト通知を表示（実装によって異なる）
    console.log('グループが作成されました:', group)
    
    // 他の開発者の実装に合わせて、グループ一覧ページやダッシュボードへ遷移
    // event.preventDefault(); // デフォルトの遷移を防ぐ場合
    // window.location.href = `/groups/${group.id}`;
  })
</script> 